{"cells":[{"cell_type":"code","source":"# models.py - SQLAlchemy Database Models\nfrom flask_sqlalchemy import SQLAlchemy\nfrom werkzeug.security import generate_password_hash, check_password_hash\nfrom datetime import datetime\n\ndb = SQLAlchemy()\n\nclass User(db.Model):\n    __tablename__ = 'users'\n    id = db.Column(db.Integer, primary_key=True)\n    email = db.Column(db.String(255), unique=True, nullable=False)\n    name = db.Column(db.String(255), nullable=False)\n    password_hash = db.Column(db.String(255), nullable=False)\n    role = db.Column(db.String(50), default='user')\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\n    \n    def set_password(self, password):\n        self.password_hash = generate_password_hash(password)\n    \n    def check_password(self, password):\n        return check_password_hash(self.password_hash, password)\n\n    def to_dict(self):\n        return {'id': self.id, 'email': self.email, 'name': self.name, 'role': self.role}\n\nclass Document(db.Model):\n    __tablename__ = 'documents'\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(255), nullable=False)\n    type = db.Column(db.String(50), nullable=False)\n    status = db.Column(db.String(50), default='draft')\n    s3_key = db.Column(db.String(500))\n    s3_bucket = db.Column(db.String(255))\n    ocr_data = db.Column(db.JSON)\n    form_schema = db.Column(db.JSON)\n    created_by = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    created_at = db.Column(db.DateTime, default=datetime.utcnow)\n    \n    def to_dict(self):\n        return {\n            'id': self.id, 'name': self.name, 'type': self.type, 'status': self.status,\n            's3_key': self.s3_key, 'created_by': self.created_by\n        }\n\nclass DocumentAssignment(db.Model):\n    __tablename__ = 'document_assignments'\n    id = db.Column(db.Integer, primary_key=True)\n    document_id = db.Column(db.Integer, db.ForeignKey('documents.id'), nullable=False)\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    assigned_at = db.Column(db.DateTime, default=datetime.utcnow)\n\nclass DocumentSubmission(db.Model):\n    __tablename__ = 'document_submissions'\n    id = db.Column(db.Integer, primary_key=True)\n    document_id = db.Column(db.Integer, db.ForeignKey('documents.id'), nullable=False)\n    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)\n    form_data = db.Column(db.JSON)\n    signature_data = db.Column(db.Text)\n    submitted_at = db.Column(db.DateTime, default=datetime.utcnow)","outputs":[],"execution_count":null,"metadata":{}}],"metadata":{"colab":{"from_bard":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}